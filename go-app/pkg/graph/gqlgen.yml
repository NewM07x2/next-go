# gqlgen configuration file
# Ref: https://gqlgen.com/config/

# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - schema/*.graphql

# Where should the generated server code go?
exec:
  filename: generated/generated.go
  package: generated

# Where should any generated models go?
model:
  filename: model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: resolver
  package: resolver
  filename_template: "{name}.resolvers.go"

# Optional: turn on to not generate the default resolver
# omit_resolver: false

# Optional: Automatically generate resolvers
# autobind:
#   - "next-go-sample/internal/domain"

# Optional: Skip validation of the schema
# skip_validation: false

# Optional: Generate code for embedded types
# struct_tag: json

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "next-go-sample/internal/domain"

# This section declares type mapping between the GraphQL and Go type systems.
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
