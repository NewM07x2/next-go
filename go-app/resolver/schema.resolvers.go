package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	"fmt"
	"next-go-sample/generated"
	"next-go-sample/internal/domain"
	"next-go-sample/model"
)

// CreateSample is the resolver for the createSample field.
func (r *mutationResolver) CreateSample(ctx context.Context, input model.CreateSampleInput) (*domain.Sample, error) {
	panic(fmt.Errorf("not implemented: CreateSample - createSample"))
}

// UpdateSample is the resolver for the updateSample field.
func (r *mutationResolver) UpdateSample(ctx context.Context, id string, input model.UpdateSampleInput) (*domain.Sample, error) {
	panic(fmt.Errorf("not implemented: UpdateSample - updateSample"))
}

// DeleteSample is the resolver for the deleteSample field.
func (r *mutationResolver) DeleteSample(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteSample - deleteSample"))
}

// Samples is the resolver for the samples field.
func (r *queryResolver) Samples(ctx context.Context) ([]*domain.Sample, error) {
	panic(fmt.Errorf("not implemented: Samples - samples"))
}

// Sample is the resolver for the sample field.
func (r *queryResolver) Sample(ctx context.Context, id string) (*domain.Sample, error) {
	panic(fmt.Errorf("not implemented: Sample - sample"))
}

// Health is the resolver for the health field.
func (r *queryResolver) Health(ctx context.Context) (string, error) {
	panic(fmt.Errorf("not implemented: Health - health"))
}

// CreatedAt is the resolver for the createdAt field.
func (r *sampleResolver) CreatedAt(ctx context.Context, obj *domain.Sample) (string, error) {
	panic(fmt.Errorf("not implemented: CreatedAt - createdAt"))
}

// UpdatedAt is the resolver for the updatedAt field.
func (r *sampleResolver) UpdatedAt(ctx context.Context, obj *domain.Sample) (string, error) {
	panic(fmt.Errorf("not implemented: UpdatedAt - updatedAt"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

// Sample returns generated.SampleResolver implementation.
func (r *Resolver) Sample() generated.SampleResolver { return &sampleResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type sampleResolver struct{ *Resolver }
